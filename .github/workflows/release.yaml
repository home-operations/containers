---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Release

on:
  push:
    branches: ["main"]
    paths: ["apps/**"]
  workflow_dispatch:
    inputs:
      app:
        type: string
        description: Application Name
        required: true
      release:
        type: boolean
        description: Release
        required: false
        default: false

permissions:
  attestations: write
  contents: write
  id-token: write
  packages: write
  security-events: write

jobs:
  filter:
    name: filter
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.changed-files.outputs.changed_files }}
    steps:
      - name: Get changed files
        id: changed-files
        uses: bjw-s-labs/action-changed-files@2cc35474e9d534ed0d743aa122fd142afbdaa0ad # v0.3.1
        with:
          path: apps
          include_only_directories: true
          max_depth: 1

  changed:
    if: ${{ needs.filter.outputs.changed-files != '[]' || github.event_name == 'workflow_dispatch' }}
    needs: filter
    name: Get Changed Apps
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.apps.outputs.apps }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Apps to Build
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: apps
        env:
          APPS: ${{ github.event_name == 'workflow_dispatch' && inputs.app || join(fromJSON(needs.filter.outputs.changed-files), ' ') }}
        with:
          script: |
            const { APPS } = process.env;
            const appsToBuild = APPS.split(' ').filter(Boolean);
            core.setOutput('apps', JSON.stringify(appsToBuild));
            console.log('apps:', JSON.stringify(appsToBuild, null, 2));
            core.summary.addHeading('Apps to build:').addList(appsToBuild).write();

  prepare:
    if: ${{ needs.changed.outputs.apps != '[]' }}
    name: Prepare (${{ matrix.app }})
    needs: changed
    runs-on: ubuntu-latest
    outputs:
      app: ${{ steps.prepare.outputs.app }}
      platforms: ${{ steps.prepare.outputs.platforms }}
      version: ${{ steps.prepare.outputs.version }}
    strategy:
      matrix:
        app: ${{ fromJSON(needs.changed.outputs.apps) }}
      fail-fast: false
      max-parallel: 4
    steps:
      - name: Prepare Container
        id: prepare
        uses: ./.github/actions/container-prepare
        with:
          app: ${{ matrix.app }}

  build:
    name: Build (${{ needs.prepare.outputs.app }})
    needs: ["prepare"]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.prepare.outputs.platforms) }}
    steps:
      - name: Build Container
        id: build
        uses: ./.github/actions/container-build
        with:
          app: ${{ needs.prepare.outputs.app }}
          platform: ${{ matrix.platform }}
          release: ${{ github.event_name == 'workflow_dispatch' && inputs.release || github.event_name == 'push' }}
          version: ${{ needs.prepare.outputs.version }}

  merge:
    name: Merge (${{ needs.prepare.outputs.app }})
    runs-on: ubuntu-latest
    needs: ["build", "prepare"]
    outputs:
      digest: ${{ steps.digest.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: vars
        with:
          script: |
            core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());

      - name: Download Bake Metadata
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: ${{ needs.prepare.outputs.app }}-bake-meta
          path: ${{ runner.temp }}

      - name: Download digests
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          path: ${{ runner.temp }}/digests
          pattern: ${{ needs.prepare.outputs.app }}-digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Create Manifest List and Push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create \
              $(jq --raw-output --compact-output '.target."docker-metadata-action".tags | map(select(startswith("ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ needs.prepare.outputs.app }}")) | "-t " + .) | join(" ")' ${{ runner.temp }}/bake-meta.json) \
              $(printf 'ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ needs.prepare.outputs.app }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ needs.prepare.outputs.app }}:$(jq --raw-output '.target."docker-metadata-action".args.DOCKER_META_VERSION' ${{ runner.temp }}/bake-meta.json)

      - name: Export Digest
        id: digest
        run: |
          TAG=$(jq --raw-output '.target."docker-metadata-action".args.DOCKER_META_VERSION' ${{ runner.temp }}/bake-meta.json)
          DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ needs.prepare.outputs.app }}:${TAG} --format '{{ json . }}' | jq --raw-output '.manifest.digest')
          echo "digest=${DIGEST}" >> $GITHUB_OUTPUT

  attest:
    name: Attest (${{ needs.prepare.outputs.app }})
    needs: ["build", "prepare", "merge"]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Vars
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: vars
        with:
          script: |
            core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Upload Dependency Snapshot
        uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0
        with:
          dependency-snapshot: true
          image: ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ needs.prepare.outputs.app }}@${{ needs.merge.outputs.digest }}

      - name: Attestation
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          push-to-registry: true
          subject-name: ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ needs.prepare.outputs.app }}
          subject-digest: ${{ needs.merge.outputs.digest }}

      - name: Verify Attestation
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh attestation verify --repo ${{ github.repository }} oci://ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ needs.prepare.outputs.app }}@${{ needs.merge.outputs.digest }}
