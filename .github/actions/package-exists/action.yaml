---
# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: Package Exists
description: Return true or false if the package exists in the registry

inputs:
  package-name:
    description: Package Name
    required: true

outputs:
  exists:
    description: Package Exists
    value: ${{ steps.package.outputs.exists }}

runs:
  using: composite
  steps:
    - name: Package Exists
      id: package
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        script: |
          const packageName = '${{ inputs.package-name }}';

          const { data: user } = await github.rest.users.getByUsername({
            username: context.repo.owner,
          });

          let container;
          if (user.type === 'Organization') {
            try {
              const { data } = await github.rest.packages.getPackageForOrganization({
                package_type: 'container',
                package_name: packageName,
                org: context.repo.owner,
              });
              container = data;
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
            }
          } else {
            try {
              const { data } = await github.rest.packages.getPackageForUser({
                package_type: 'container',
                package_name: packageName,
                username: context.repo.owner,
              });
              container = data;
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
            }
          }

          core.setOutput('exists', `${container !== null}`);
