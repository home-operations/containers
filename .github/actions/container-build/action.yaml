---
# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: Container Build
description: Builds a container for a given app and version

inputs:
  app:
    description: App
    required: true
  platform:
    description: Platform
    required: true
  release:
    description: Release
    required: true
    default: 'false'

outputs:
  digest:
    description: Digest
    value: ${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.digest'] }}
  test-digest:
    description: Test Digest
    value: ${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.config.digest'] }}

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Vars
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      id: vars
      with:
        script: |
          core.setOutput('repository-owner', '${{ github.repository_owner }}'.toLowerCase());
          core.setOutput('target-arch', '${{ inputs.platform }}'.split('/').pop());

    - name: Login to GitHub Container Registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Download Bake Metadata
      uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
      with:
        name: ${{ inputs.app }}-bake-meta
        path: ${{ runner.temp }}

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Build
      uses: docker/bake-action@4ba453fbc2db7735392b93edf935aaf9b1e8f747 # v6.5.0
      id: bake
      with:
        files: |
          ./docker-bake.hcl
          cwd://${{ runner.temp }}/bake-meta.json
        set: |
          *.args.VENDOR=${{ steps.vars.outputs.repository-owner }}
          *.cache-from=${{ format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2},mode=max', steps.vars.outputs.repository-owner, inputs.app, steps.vars.outputs.target-arch) }}
          *.cache-to=${{ inputs.release && format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2},mode=max,compression=zstd,force-compression=true', steps.vars.outputs.repository-owner, inputs.app, steps.vars.outputs.target-arch) || '' }}
          *.labels.org.opencontainers.image.title=${{ inputs.app }}
          *.labels.org.opencontainers.image.url=https://ghcr.io/${{ steps.vars.outputs.repository-owner }}/${{ inputs.app }}
          *.labels.org.opencontainers.image.version=${{ needs.prepare.outputs.version }}
          *.labels.org.opencontainers.image.revision=${{ github.sha }}
          *.labels.org.opencontainers.image.vendor=${{ steps.vars.outputs.repository-owner }}
          ${{ inputs.release && format('*.output=type=image,name=ghcr.io/{0}/{1},push-by-digest=true,name-canonical=true,push=true', steps.vars.outputs.repository-owner, inputs.app) || '*.output=type=docker' }}
          *.platform=${{ inputs.platform }}
          *.tags=
        source: .
        targets: image
        workdir: ./apps/${{ inputs.app }}

    - if: ${{ inputs.release }}
      name: Export digest
      shell: bash
      run: |
        mkdir -p ${{ runner.temp }}/digests
        DIGEST="${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.digest'] }}"
        touch "${{ runner.temp }}/digests/${DIGEST#sha256:}"

    - if: ${{ inputs.release }}
      name: Upload digest
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{ inputs.app }}-digests-${{ steps.vars.outputs.target-arch }}
        path: ${{ runner.temp }}/digests/*
        if-no-files-found: error
        retention-days: 1
